Для всех заданий я использовал один проект .
Для каждого задание есть отдельная кнопка связанная с номером задания.

1 - задание использавние ArrayAdapter. Для этого создал простой интерфейс в котором есть EditText,
а с права от него кнопка . На эту кнопку установлен метод . При нажатий на нее он срабатывает и если
EditText не пуст , то добавляет Текст который есть в заранее подготовленный ListView
к которому привязан ArrayAdapter<String> . Простой , но при этом эффективный метод связки элементов!

2 - задание использование BaseAdapter . BaseAdapter служит прородитедем всех остальных Adapterov.
Это значит что с помощью него можно написать Adapter который будет подстроен под наши нужды .
В данном случае я создал свою модель Art(что-то вроде картин) . Эта модель в себе хранит информацию
про себя. А точнее имя картины , автора и сам ресур картины. В классе нет ничего необычного все методы
и конструктор сгенерированы как мы делали на уроке .
А вот класс ArrayAdapter который наследуется от BaseAdapter куда более интреснее.
Также все методы сгенерированы кроме removItem и getView . removeItem служит для удаления обьекта из списка.
А после удаления вызывает метод notifyDataSetChanged() который служит для того чтобы сказать Адаптеру
что данные изменились и нужно обновить интерфейс.
В самом классе просто связываем все обьекты друг с другом и устанавлиаем первоначальные данные
для того чтобы увидеть работает ли наш метод удаления и как выглядит сам интерфейс .
А также устанавливаем метод setOnItemLongClickListener() который помогает удалить обьект при долгом
нажатий на него как было указано в самом заданий .

3 - задание использование Spinner c кастамизированным ArrayAdapter оказался самым сложным в этом списке. Может быть из-за того что до этого не использовал Spinner.
но польучил достаточно большой опыт и результат кода приятно удивил . Примерно такая же ситуация как и с предыдущим заданием 
создаем модель, Адаптер, xml файл для обьекта и связываем все эи вещи в Activity, добавляем элементы. В будущем попробуем улучшить
этот пример с возможностью создавать элемент книги и добавить его в Spinner. 
